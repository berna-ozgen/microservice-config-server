eureka:
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:9001/eureka
  instance:
    instance-id: ${spring.application.name}:${instanceId:${random.value}}
    prefer-ip-address: true
server:
  port: 0
spring:
  application:
    name: filter
  data:
    mongodb:
      database: rentalcarmongodb
      host: localhost
      port: 27017
  kafka:
    consumer:
      bootstrap-servers: localhost:9092
      auto-offset-reset: earliest
      group-id: inventory3
      properties:
        spring:
          json:
            trusted:
              packages: "*"
     value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer         
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    topic:
      name: rental_topics4
